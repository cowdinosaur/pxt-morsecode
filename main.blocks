<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="m.{bd/Ek%h;;{z}:wPUi" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="frZiFB3]Om;#jQ^/G{_i" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace morseCode {" line1="    export enum MorseSignal {" line2="        //% block=&quot;•&quot;" line3="        Dot," line4="        //% block=&quot;━&quot;" line5="        Dash," line6="    }" line7="" line8="    const _characters = {" line9="        A: [MorseSignal.Dot, MorseSignal.Dash]," line10="        B: [MorseSignal.Dash, MorseSignal.Dot, MorseSignal.Dot, MorseSignal.Dot]," line11="        C: [MorseSignal.Dash, MorseSignal.Dot, MorseSignal.Dash, MorseSignal.Dot]," line12="        D: [MorseSignal.Dash, MorseSignal.Dot, MorseSignal.Dot]," line13="        E: [MorseSignal.Dot]," line14="        F: [MorseSignal.Dot, MorseSignal.Dot, MorseSignal.Dash, MorseSignal.Dot]," line15="        G: [MorseSignal.Dash, MorseSignal.Dash, MorseSignal.Dot]," line16="        H: [MorseSignal.Dot, MorseSignal.Dot, MorseSignal.Dot, MorseSignal.Dot]," line17="        I: [MorseSignal.Dot, MorseSignal.Dot]," line18="        J: [MorseSignal.Dot, MorseSignal.Dash, MorseSignal.Dash, MorseSignal.Dash]," line19="        K: [MorseSignal.Dash, MorseSignal.Dot, MorseSignal.Dash]," line20="        L: [MorseSignal.Dot, MorseSignal.Dash, MorseSignal.Dot, MorseSignal.Dot]," line21="        M: [MorseSignal.Dash, MorseSignal.Dash]," line22="        N: [MorseSignal.Dash, MorseSignal.Dot]," line23="        O: [MorseSignal.Dash, MorseSignal.Dash, MorseSignal.Dash]," line24="        P: [MorseSignal.Dot, MorseSignal.Dash, MorseSignal.Dash, MorseSignal.Dot]," line25="        Q: [MorseSignal.Dash, MorseSignal.Dash, MorseSignal.Dot, MorseSignal.Dash]," line26="        R: [MorseSignal.Dot, MorseSignal.Dash, MorseSignal.Dot]," line27="        S: [MorseSignal.Dot, MorseSignal.Dot, MorseSignal.Dot]," line28="        T: [MorseSignal.Dash]," line29="        U: [MorseSignal.Dot, MorseSignal.Dot, MorseSignal.Dash]," line30="        V: [MorseSignal.Dot, MorseSignal.Dot, MorseSignal.Dot, MorseSignal.Dash]," line31="        W: [MorseSignal.Dot, MorseSignal.Dash, MorseSignal.Dash]," line32="        X: [MorseSignal.Dash, MorseSignal.Dot, MorseSignal.Dot, MorseSignal.Dash]," line33="        Y: [MorseSignal.Dash, MorseSignal.Dot, MorseSignal.Dash, MorseSignal.Dash]," line34="        Z: [MorseSignal.Dash, MorseSignal.Dash, MorseSignal.Dot, MorseSignal.Dot]," line35="    };" line36="" line37="    //% fixedInstance" line38="    let A: MorseSignal[] = _characters.A;" line39="    //% fixedInstance" line40="    let B: MorseSignal[] = _characters.B;" line41="    //% fixedInstance" line42="    let C: MorseSignal[] = _characters.C;" line43="    //% fixedInstance" line44="    let D: MorseSignal[] = _characters.D;" line45="    //% fixedInstance" line46="    let E: MorseSignal[] = _characters.E;" line47="    //% fixedInstance" line48="    let F: MorseSignal[] = _characters.F;" line49="    //% fixedInstance" line50="    let G: MorseSignal[] = _characters.G;" line51="    //% fixedInstance" line52="    let H: MorseSignal[] = _characters.H;" line53="    //% fixedInstance" line54="    let I: MorseSignal[] = _characters.I;" line55="    //% fixedInstance" line56="    let J: MorseSignal[] = _characters.J;" line57="    //% fixedInstance" line58="    let K: MorseSignal[] = _characters.K;" line59="    //% fixedInstance" line60="    let L: MorseSignal[] = _characters.L;" line61="    //% fixedInstance" line62="    let M: MorseSignal[] = _characters.M;" line63="    //% fixedInstance" line64="    let N: MorseSignal[] = _characters.N;" line65="    //% fixedInstance" line66="    let O: MorseSignal[] = _characters.O;" line67="    //% fixedInstance" line68="    let P: MorseSignal[] = _characters.P;" line69="    //% fixedInstance" line70="    let Q: MorseSignal[] = _characters.Q;" line71="    //% fixedInstance" line72="    let R: MorseSignal[] = _characters.R;" line73="    //% fixedInstance" line74="    let S: MorseSignal[] = _characters.S;" line75="    //% fixedInstance" line76="    let T: MorseSignal[] = _characters.T;" line77="    //% fixedInstance" line78="    let U: MorseSignal[] = _characters.U;" line79="    //% fixedInstance" line80="    let V: MorseSignal[] = _characters.V;" line81="    //% fixedInstance" line82="    let W: MorseSignal[] = _characters.W;" line83="    //% fixedInstance" line84="    let X: MorseSignal[] = _characters.X;" line85="    //% fixedInstance" line86="    let Y: MorseSignal[] = _characters.Y;" line87="    //% fixedInstance" line88="    let Z: MorseSignal[] = _characters.Z;" line89="" line90="    //% fixedInstances" line91="    class MorseCharacter {" line92="        //%  block=&quot;char %name&quot;" line93="        get(): MorseSignal[] {" line94="            return _characters.X" line95="        }" line96="    }" line97="" line98="    /**" line99="     * Represents a Morse signal block" line100="     */" line101="    //% color=190 block=&quot;%signal&quot;" line102="    export function _signal(signal: MorseSignal): MorseSignal {" line103="        return signal;" line104="    }" line105="" line106="    /**" line107="     * Convert a string to " line108="     */" line109="    //% color=190 block=&quot;convert %s to Morse chars&quot;" line110="    //% blockSetVariable=&quot;Morse char list&quot;" line111="    export function stringToMorseArray(s: string): MorseSignal[][] {" line112="        let word: MorseSignal[][] = [];" line113="        " line114="        const chars = s.split('');" line115="        chars.forEach(function(c,i) {" line116="            switch(c) {" line117="                case 'A':" line118="                case 'a':" line119="                    word.push(A);" line120="                    break;" line121="                case 'B':" line122="                case 'b': " line123="                    word.push(B);" line124="                    break;" line125="                case 'C':" line126="                case 'c':" line127="                    word.push(C);" line128="                    break;" line129="                case 'D':" line130="                case 'd':" line131="                    word.push(D);" line132="                    break;" line133="                case 'E':" line134="                case 'e':" line135="                    word.push(E);" line136="                    break;" line137="                case 'F':" line138="                case 'f':" line139="                    word.push(F);" line140="                    break;" line141="                case 'G':" line142="                case 'g':" line143="                    word.push(G);" line144="                    break;" line145="                case 'H':" line146="                case 'h':" line147="                    word.push(H);" line148="                    break;" line149="                case 'I':" line150="                case 'i':" line151="                    word.push(I);" line152="                    break;" line153="                case 'J':" line154="                case 'j':" line155="                    word.push(J);" line156="                    break;" line157="                case 'K':" line158="                case 'k':" line159="                    word.push(K);" line160="                    break;" line161="                case 'L':" line162="                case 'l':" line163="                    word.push(L);" line164="                    break;" line165="                case 'M':" line166="                case 'm':" line167="                    word.push(M);" line168="                    break;" line169="                case 'N':" line170="                case 'n':" line171="                    word.push(N);" line172="                    break;" line173="                case 'O':" line174="                case 'o':" line175="                    word.push(O);" line176="                    break;" line177="                case 'P':" line178="                case 'p':" line179="                    word.push(P);" line180="                    break;" line181="                case 'Q':" line182="                case 'q':" line183="                    word.push(Q);" line184="                    break;" line185="                case 'R':" line186="                case 'r':" line187="                    word.push(R);" line188="                    break;" line189="                case 'S':" line190="                case 's':" line191="                    word.push(S);" line192="                    break;" line193="                case 'T':" line194="                case 't':" line195="                    word.push(T);" line196="                    break;" line197="                case 'U':" line198="                case 'u':" line199="                    word.push(U);" line200="                    break;" line201="                case 'V':" line202="                case 'v':" line203="                    word.push(V);" line204="                    break;" line205="                case 'W':" line206="                case 'w':" line207="                    word.push(W);" line208="                    break;" line209="                case 'X':" line210="                case 'x':" line211="                    word.push(X);" line212="                    break;" line213="                case 'Y':" line214="                case 'y':" line215="                    word.push(Y);" line216="                    break;" line217="                case 'Z':" line218="                case 'z':" line219="                    word.push(Z);" line220="                    break;" line221="            }" line222="        });" line223="           " line224="        return word;" line225="    }" line226="}" numlines="227"></mutation></block></statement></block></xml>